using System;
using Microsoft.EntityFrameworkCore.Migrations;

namespace AccountAPI.Migrations
{
    public partial class Initial : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "Users",
                columns: table => new
                {
                    Id = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Email = table.Column<string>(nullable: false),
                    PasswordHash = table.Column<byte[]>(nullable: true),
                    PasswordSalt = table.Column<byte[]>(nullable: true),
                    Name = table.Column<string>(nullable: true),
                    LastName = table.Column<string>(nullable: true),
                    DateOfBirth = table.Column<DateTime>(nullable: false),
                    Photo = table.Column<string>(nullable: true),
                    UserType = table.Column<int>(nullable: false),
                    UserStatus = table.Column<int>(nullable: false, defaultValue: 1),
                    Role = table.Column<string>(nullable: false, defaultValue: "AppUser")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Users", x => x.Id);
                });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "DateOfBirth", "Email", "LastName", "Name", "PasswordHash", "PasswordSalt", "Photo", "Role", "UserStatus", "UserType" },
                values: new object[,]
                {
                    { 1, new DateTime(1990, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), "admin@gmail.com", "Doe", "Joe", new byte[] { 234, 135, 148, 165, 22, 250, 242, 153, 188, 228, 99, 240, 214, 109, 131, 248, 45, 86, 161, 141, 171, 1, 88, 217, 174, 71, 244, 177, 43, 191, 223, 206, 117, 176, 82, 84, 119, 149, 27, 117, 78, 153, 41, 66, 61, 150, 28, 15, 31, 60, 155, 28, 191, 231, 216, 43, 121, 64, 28, 157, 73, 13, 204, 133 }, new byte[] { 80, 126, 73, 103, 200, 114, 162, 229, 14, 70, 32, 252, 197, 202, 68, 169, 38, 209, 19, 36, 208, 174, 21, 46, 232, 249, 202, 80, 126, 45, 42, 114, 70, 186, 9, 38, 234, 202, 157, 191, 242, 139, 157, 113, 239, 100, 111, 181, 5, 161, 108, 219, 166, 60, 131, 174, 139, 61, 233, 34, 31, 91, 30, 173, 179, 254, 26, 164, 228, 61, 58, 143, 235, 223, 77, 85, 194, 139, 204, 145, 147, 228, 244, 36, 42, 160, 210, 123, 67, 91, 218, 34, 188, 119, 91, 17, 190, 43, 249, 134, 16, 103, 137, 115, 183, 138, 210, 72, 18, 12, 221, 150, 173, 85, 122, 43, 232, 150, 224, 177, 248, 242, 55, 108, 63, 173, 246, 118 }, null, "Admin", 2, 1 },
                    { 2, new DateTime(1993, 7, 23, 0, 0, 0, 0, DateTimeKind.Unspecified), "controller@gmail.com", "Doe", "Jane", new byte[] { 187, 128, 125, 73, 37, 160, 61, 136, 8, 240, 6, 5, 29, 240, 216, 67, 176, 35, 144, 250, 108, 49, 125, 114, 199, 49, 107, 221, 180, 89, 150, 231, 164, 197, 233, 140, 123, 6, 217, 24, 217, 16, 191, 251, 166, 128, 135, 205, 37, 212, 16, 126, 120, 147, 44, 137, 42, 38, 171, 150, 172, 174, 35, 45 }, new byte[] { 213, 56, 218, 140, 23, 150, 101, 221, 172, 229, 194, 224, 252, 174, 210, 67, 155, 9, 246, 244, 166, 253, 58, 159, 27, 175, 124, 113, 253, 37, 237, 8, 197, 38, 90, 24, 231, 32, 184, 209, 228, 212, 143, 234, 247, 164, 170, 155, 230, 36, 129, 52, 204, 29, 55, 123, 93, 115, 6, 99, 210, 230, 75, 217, 22, 70, 226, 41, 95, 36, 248, 125, 233, 225, 73, 187, 191, 31, 93, 41, 13, 254, 105, 77, 48, 254, 66, 80, 97, 110, 9, 109, 41, 84, 126, 218, 144, 203, 115, 126, 112, 199, 226, 135, 5, 180, 46, 209, 43, 151, 134, 35, 126, 170, 18, 57, 251, 108, 187, 145, 10, 81, 31, 20, 238, 226, 147, 223 }, null, "Controller", 2, 1 },
                    { 3, new DateTime(1996, 9, 3, 0, 0, 0, 0, DateTimeKind.Unspecified), "appuser@gmail.com", "Doe", "John", new byte[] { 238, 194, 187, 9, 228, 13, 28, 57, 54, 35, 87, 189, 157, 38, 122, 50, 88, 126, 126, 146, 252, 170, 228, 39, 148, 252, 168, 170, 47, 240, 185, 121, 199, 110, 25, 135, 164, 120, 133, 66, 29, 167, 111, 151, 190, 250, 174, 40, 72, 162, 166, 253, 170, 202, 131, 207, 112, 249, 178, 86, 251, 100, 177, 142 }, new byte[] { 116, 127, 152, 234, 9, 217, 241, 25, 133, 138, 55, 165, 66, 2, 139, 46, 3, 228, 45, 80, 93, 110, 165, 243, 221, 149, 15, 172, 47, 51, 227, 120, 149, 58, 227, 189, 180, 207, 4, 188, 226, 211, 74, 192, 124, 23, 42, 91, 92, 183, 61, 124, 150, 24, 254, 240, 149, 255, 163, 253, 171, 218, 89, 97, 81, 49, 72, 94, 80, 5, 243, 169, 64, 179, 97, 18, 50, 252, 17, 130, 123, 251, 173, 117, 75, 19, 1, 26, 154, 194, 73, 18, 31, 219, 139, 194, 181, 28, 170, 84, 119, 131, 66, 237, 142, 97, 109, 17, 137, 124, 151, 73, 225, 174, 76, 233, 103, 189, 120, 91, 103, 136, 137, 155, 198, 155, 184, 147 }, null, "AppUser", 2, 1 },
                    { 4, new DateTime(1996, 9, 3, 0, 0, 0, 0, DateTimeKind.Unspecified), "nikola@gmail.com", "Dragas", "Nikola", new byte[] { 135, 250, 81, 75, 242, 122, 212, 210, 11, 170, 34, 23, 237, 86, 69, 72, 188, 253, 143, 52, 180, 189, 21, 187, 130, 94, 7, 222, 212, 31, 192, 35, 90, 38, 105, 34, 189, 28, 234, 84, 123, 59, 149, 209, 41, 231, 131, 123, 8, 240, 161, 115, 208, 93, 242, 188, 89, 42, 115, 251, 166, 175, 138, 87 }, new byte[] { 248, 6, 238, 159, 38, 182, 218, 236, 0, 247, 190, 231, 202, 188, 148, 127, 198, 151, 57, 16, 246, 106, 140, 24, 255, 182, 218, 182, 78, 146, 154, 31, 27, 79, 158, 247, 3, 77, 102, 117, 146, 76, 103, 205, 198, 89, 49, 86, 233, 102, 63, 83, 233, 64, 124, 240, 102, 200, 148, 229, 104, 141, 227, 219, 248, 199, 229, 0, 252, 27, 176, 5, 1, 63, 237, 36, 150, 87, 127, 154, 246, 68, 11, 5, 97, 40, 114, 160, 12, 83, 160, 122, 55, 31, 156, 80, 66, 59, 222, 160, 103, 68, 67, 19, 183, 49, 55, 8, 95, 193, 191, 211, 106, 27, 178, 55, 35, 101, 251, 226, 234, 175, 157, 240, 177, 99, 120, 50 }, null, "AppUser", 2, 2 }
                });
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "Users");
        }
    }
}
